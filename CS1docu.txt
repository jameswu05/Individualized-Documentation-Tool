len()|list,string,set,dictionary,tuple,length,len,size|returns the number of items in an object.|len(object)|list, string, set, dictionary, tuple|object in which you are finding length of|returns an integer value
.count()|count,list,calculate,toll,string,set,dictionary,tuple|returns the number of times a specified value appears in the object.|object.count(value, start, end)|list, string, set, dictionary, tuple|value: Required. A String. The string to value to search for,start: Optional. An Integer. The position to start the search. Default is 0,end: Optional. An Integer. The position to end the search. Default is the end of the string|returns integer value
.title()|title,capitalize,first,letter,string|returns a string where the first character in every word is upper case. Like a header, or a title. If the word contains a number or a symbol, the first letter after that will be converted to upper case.|object.title()|string|No Arguments|return brand new string
.find()|find,in,around,within|finds the first occurrence of the specified value.|object.find(value, start, end)|string|value: Required. The value to search for,start: Optional. Where to start the search. Default is 0,end: Optional. Where to end the search. Default is to the end of the string|returns integer value representing index where value is located. If no value found, returns -1
.capitalize()|capitalize,first,word,upper,case,uppercase|returns a string where the first character is upper case, and the rest is lower case.|object.capitalize()|string|No Arguments|returns brand new string
.replace()|switch,replace,remove,change,string,reinstate|replaces a specified phrase with another specified phrase. All occurrences of the specified phrase will be replaced, if nothing else is specified.|object.replace(oldvalue, newvalue, count)|string|oldvalue: Required. The string to search for,newvalue: Required. The string to replace the old value with,count: Optional. A number specifying how many occurrences of the old value you want to replace. Default is all occurrences|returns brand new string
.strip()|clear,remove,clean,take,off,sides,whitespace,string|method removes any leading, and trailing whitespaces. Leading means at the beginning of the string, trailing means at the end. You can specify which character(s) to remove, if not, any whitespaces will be removed.|object.strip(characters)|string|characters: Optional. A set of characters to remove as leading/trailing characters|returns brand new string
.lstrip()|left,side,clear,remove,clean,take,off,sides,whitespace,string|method removes any leading characters (space is the default leading character to remove)|object.lstrip(characters)|string|characters: Optional. A set of characters to remove as leading characters|returns brand new string
.rstrip()|right,side,clear,remove,clean,take,off,sides,whitespace,string|method removes any trailing characters (space is the default trailing character to remove)|object.rstrip(characters)|string|characters: Optional. A set of characters to remove as trailing characters|returns brand new string
.upper()|entire,whole,all,characters,string,uppercase,upper,case|returns a string where all characters are in upper case. Symbols and Numbers are ignored.|object.upper()|string|No Arguments|returns brand new string
.lower()|entire,whole,all,characters,string,lowercase,lower,case|method returns a string where all characters are lower case. Symbols and Numbers are ignored.|object.lower()|string|no Arguments|returns brand new string
.sort()|sort,sorted,sorts,ascending,list,categorize,arrange,separate,sift,comb,catalogue,cull|sorts the list ascending by default|object.sort(reverse= True/False, key=myFunc)|list|reverse: Optional. reverse=True will sort the list descending. Default is reverse=False,key: Optional. A function to specify the sorting criteria(s)|Returns keyword ‘None’
sorted()|sort,sorted,sorts,ascending,list,categorize,arrange,separate,sift,comb,catalogue,cull|returns a sorted list of the specified object|sorted(object, key=key, reverse=reverse)|list,dictionary,tuple,etc.|reverse: Optional. reverse=True will sort the list descending. Default is reverse=False,key: Optional. A Function to execute to decide the order|Returns keyword ‘None’
.append()|append,add,join,list,attach,end,affix,element,string,number,object|appends an element to the end of the list|object.append(element)|list|element :An element of any type (string or number or object or etc.)|returns the 'None' Keyword
.insert()|insert,list,put,embed,enter,fill,implement,position,value,string,number,object,specified|inserts the specified value at the specified position|object.insert(position, element)|list|position:A number specifying in which position to insert the value,element: An element of any type (string or number or object or etc.)|Returns keyword 'None'
.pop()|pop,remove,position,specified,last,occurrence,rid,discard,delete,out,expel|removes the element at the specified position|object.pop(position)|list|position:Optional. A number specifying the position of the element you want to remove and the default value is -1 which returns the last item|returns value of element popped
.remove()|remove,position,first,occurrence,rid,discard,delete,out,expel|removes the first occurrence of the element with the specified value|object.remove(element)|list|element: Any type (string or number or list or etc.)|the element you want to remove
max()|max,maximum,highest,high,peak,value,largest,biggest|returns the item with the highest value, or the item with the highest value in an object. If the values are strings, an alphabetically comparison is done|max(object)|string,list,dictionary,etc.|object in which you are finding maximum value of|returns object
min()|min,minimum,lowest,low,value,smallest,tiniest,least,minimal|returns the item with the lowest value, or the item with the lowest value in an object. If the values are strings, an alphabetically comparison is done|min(object)|string,list,dictionary,etc.|object in which you are finding minimum value of|returns object
sum()|sum,add,values,value,total,amount,all,sequence|returns a number, the sum of all items in an object|sum(object, start)|tuple,integer|start: Optional. A value that is added to the return value|returns integer
.clear()|clear,wipe,remove,empty,demolish|removes all the elements from a list.|object.clear()|list, set, dictionary, any non-hashable data type||emptied version of non-hasahble data type
.extend()|extend,elongate,make,more,lengthen|adds the specified list elements (or any iterable) to the end of the current list.|list.extend(iterable)|list|iterable: Required. Any iterable (list  set  tuple  etc.)|a list with the argumented iterables added onto the end.
